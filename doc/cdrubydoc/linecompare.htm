<HTML>
<HEAD>
<Title>Line Comparison</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Line Comparison</p>
<hr class="separator">
<div class="content">
<img src="images/linecompare.png">
<br><br>
This example demonstrates filling the area between two lines or curves, as well as a number of advanced chart formatting techniques.<br><br>
ChartDirector supports filling the area between two lines. The lines can be from a <a href="LineLayer.htm">LineLayer</a>, <a href="SplineLayer.htm">SplineLayer</a>, <a href="StepLineLayer.htm">StepLineLayer</a>, <a href="TrendLayer.htm">TrendLayer</a> or from an axis <a href="Mark.htm">Mark</a>. Two colors can be used for filling, depending on which line is on top.<br><br>
The effects in this example is achieved using the following methods:<br><br>
<ul><li> Add the purple spline curve to the chart using <a href="XYChart.addSplineLayer.htm">XYChart.addSplineLayer</a>.<br><br>
<li> Add the two green lines to the chart using <a href="XYChart.addLineLayer.htm">XYChart.addLineLayer</a> and <a href="Layer.addDataSet.htm">Layer.addDataSet</a>.<br><br>
<li> Color the region between the two green lines with semi-transparent green using <a href="XYChart.addInterLineLayer.htm">XYChart.addInterLineLayer</a>.<br><br>
<li> Color the region between the spline curve and the upper green line using <a href="XYChart.addInterLineLayer.htm">XYChart.addInterLineLayer</a>. The fill color is set to red if the spline line is above the upper green line, otherwise it is <a href="ChartDirector.Transparent.htm">Transparent</a>.<br><br>
<li> Color the region between the spline curve and the lower green line using <a href="XYChart.addInterLineLayer.htm">XYChart.addInterLineLayer</a>. The fill color is set to blue if the spline line is below the lower green line, otherwise it is <a href="ChartDirector.Transparent.htm">Transparent</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/linecompare_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class LinecompareController &lt; ApplicationController

    def index()
        @title = "Line with Target Zone"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the upper and lower bounding lines
        upperY = [60, 60, 100, 100, 60, 60]
        lowerY = [40, 40, 80, 80, 40, 40]
        zoneX = [0, 2.5, 3.5, 5.5, 6.5, 10]

        # The data for the spline curve
        curveY = [50, 44, 54, 48, 58, 50, 90, 85, 104, 82, 96, 90, 74, 52, 35, 58, 46, 54,
            48, 52, 50]
        curveX = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5,
            9, 9.5, 10]

        # Create a XYChart object of size 600 x 300 pixels, with a light grey (cccccc)
        # background, black border, and 1 pixel 3D border effect.
        c = ChartDirector::XYChart.new(600, 300, 0xcccccc, 0x000000, 1)

        # Set directory for loading images to current script directory
        c.setSearchPath(File.dirname(__FILE__))

        # Set the plotarea at (55, 58) and of size 520 x 195 pixels, with white
        # background. Turn on both horizontal and vertical grid lines with light grey
        # color (cccccc)
        c.setPlotArea(55, 58, 520, 195, 0xffffff, -1, -1, 0xcccccc, 0xcccccc)

        # Add a legend box at (55, 32) (top of the chart) with horizontal layout. Use 9
        # pts Arial Bold font. Set the background and border color to Transparent.
        c.addLegend(55, 32, false, "arialbd.ttf", 9).setBackground(
            ChartDirector::Transparent)

        # Add a title box to the chart using 15 pts Times Bold Italic font. The title is
        # in CDML and includes embedded images for highlight. The text is white (ffffff)
        # on a black background, with a 1 pixel 3D border.
        c.addTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Performance " \
            "Enhancer &lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "timesbi.ttf", 15, 0xffffff
            ).setBackground(0x000000, -1, 1)

        # Add a title to the y axis
        c.yAxis().setTitle("Temperature")

        # Add a title to the x axis using CMDL
        c.xAxis().setTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;")

        # Set the axes width to 2 pixels
        c.xAxis().setWidth(2)
        c.yAxis().setWidth(2)

        # Add a purple (800080) spline layer to the chart with a line width of 2 pixels
        splineLayer = c.addSplineLayer(curveY, 0x800080, "Molecular Temperature")
        splineLayer.setXData(curveX)
        splineLayer.setLineWidth(2)

        # Add a line layer to the chart with two dark green (338033) data sets, and a line
        # width of 2 pixels
        lineLayer = c.addLineLayer2()
        lineLayer.addDataSet(upperY, 0x338033, "Target Zone")
        lineLayer.addDataSet(lowerY, 0x338033)
        lineLayer.setXData(zoneX)
        lineLayer.setLineWidth(2)

        # Color the zone between the upper zone line and lower zone line as
        # semi-transparent light green (8099ff99)
        c.addInterLineLayer(lineLayer.getLine(0), lineLayer.getLine(1), 0x8099ff99,
            0x8099ff99)

        # If the spline line gets above the upper zone line, color to area between the
        # lines red (ff0000)
        c.addInterLineLayer(splineLayer.getLine(0), lineLayer.getLine(0), 0xff0000,
            ChartDirector::Transparent)

        # If the spline line gets below the lower zone line, color to area between the
        # lines blue (0000ff)
        c.addInterLineLayer(splineLayer.getLine(0), lineLayer.getLine(1),
            ChartDirector::Transparent, 0x0000ff)

        # Add a custom CDML text at the bottom right of the plot area as the logo
        c.addText(575, 250,
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;" \
            "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;"
            ).setAlignment(ChartDirector::BottomRight)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/linecompare.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the upper and lower bounding lines
upperY = [60, 60, 100, 100, 60, 60]
lowerY = [40, 40, 80, 80, 40, 40]
zoneX = [0, 2.5, 3.5, 5.5, 6.5, 10]

# The data for the spline curve
curveY = [50, 44, 54, 48, 58, 50, 90, 85, 104, 82, 96, 90, 74, 52, 35, 58, 46, 54,
    48, 52, 50]
curveX = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9,
    9.5, 10]

# Create a XYChart object of size 600 x 300 pixels, with a light grey (cccccc)
# background, black border, and 1 pixel 3D border effect.
c = ChartDirector::XYChart.new(600, 300, 0xcccccc, 0x000000, 1)

# Set the plotarea at (55, 58) and of size 520 x 195 pixels, with white background.
# Turn on both horizontal and vertical grid lines with light grey color (cccccc)
c.setPlotArea(55, 58, 520, 195, 0xffffff, -1, -1, 0xcccccc, 0xcccccc)

# Add a legend box at (55, 32) (top of the chart) with horizontal layout. Use 9 pts
# Arial Bold font. Set the background and border color to Transparent.
c.addLegend(55, 32, false, "arialbd.ttf", 9).setBackground(ChartDirector::Transparent
    )

# Add a title box to the chart using 15 pts Times Bold Italic font. The title is in
# CDML and includes embedded images for highlight. The text is white (ffffff) on a
# black background, with a 1 pixel 3D border.
c.addTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Performance " \
    "Enhancer &lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "timesbi.ttf", 15, 0xffffff
    ).setBackground(0x000000, -1, 1)

# Add a title to the y axis
c.yAxis().setTitle("Temperature")

# Add a title to the x axis using CMDL
c.xAxis().setTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;")

# Set the axes width to 2 pixels
c.xAxis().setWidth(2)
c.yAxis().setWidth(2)

# Add a purple (800080) spline layer to the chart with a line width of 2 pixels
splineLayer = c.addSplineLayer(curveY, 0x800080, "Molecular Temperature")
splineLayer.setXData(curveX)
splineLayer.setLineWidth(2)

# Add a line layer to the chart with two dark green (338033) data sets, and a line
# width of 2 pixels
lineLayer = c.addLineLayer2()
lineLayer.addDataSet(upperY, 0x338033, "Target Zone")
lineLayer.addDataSet(lowerY, 0x338033)
lineLayer.setXData(zoneX)
lineLayer.setLineWidth(2)

# Color the zone between the upper zone line and lower zone line as semi-transparent
# light green (8099ff99)
c.addInterLineLayer(lineLayer.getLine(0), lineLayer.getLine(1), 0x8099ff99,
    0x8099ff99)

# If the spline line gets above the upper zone line, color to area between the lines
# red (ff0000)
c.addInterLineLayer(splineLayer.getLine(0), lineLayer.getLine(0), 0xff0000,
    ChartDirector::Transparent)

# If the spline line gets below the lower zone line, color to area between the lines
# blue (0000ff)
c.addInterLineLayer(splineLayer.getLine(0), lineLayer.getLine(1),
    ChartDirector::Transparent, 0x0000ff)

# Add a custom CDML text at the bottom right of the plot area as the logo
c.addText(575, 250,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;" \
    "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;"
    ).setAlignment(ChartDirector::BottomRight)

# Output the chart
c.makeChart("linecompare.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
