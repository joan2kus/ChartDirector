<HTML>
<HEAD>
<Title>Tick Density</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Tick Density</p>
<hr class="separator">
<div class="content">
<img src="images/ticks0.png">&nbsp;&nbsp;<img src="images/ticks1.png">
<br><br>
This example demonstrates how to control the axis tick density in auto-scaling.<br><br>
By default, in auto-scaling, ChartDirector automatically chooses the tick spacing for the axis.<br><br>
In some cases, you may want to suggest the tick spacing to use. This can be done by using <a href="Axis.setTickDensity.htm">Axis.setTickDensity</a>.<br><br>
Note that the actual tick spacing chosen by ChartDirector may not be equal to the suggested tick spacing. The suggested tick spacing is only a lower bound. It is because there may be other constraints when choosing the ticks. For example, the tick positions should be "neat numbers", such as (0, 5, 10, ...), and not arbitrary numbers like (0, 4.792, 9.584, ...). Also, by default, the axis starts and ends at tick positions (configurable using <a href="Axis.setRounding.htm">Axis.setRounding</a>), which means the axis length must be divisible by the tick spacing. These and other constraints will affect the exact ticks being chosen.<br><br>
In this example, one of the charts is drawn using the default tick spacing. The other chart is drawn using a suggested tick spacing of 10 pixels. Note that the actual tick spacing is slightly larger than 10 pixels.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/ticks_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class TicksController &lt; ApplicationController

    def index()
        @title = "Tick Density"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 2
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the chart
        data = [100, 125, 265, 147, 67, 105]
        labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"]

        # Create a XYChart object of size 250 x 250 pixels
        c = ChartDirector::XYChart.new(250, 250)

        # Set the plot area at (27, 25) and of size 200 x 200 pixels
        c.setPlotArea(27, 25, 200, 200)

        if params["img"] == "1"
            # High tick density, uses 10 pixels as tick spacing
            c.addTitle("Tick Density = 10 pixels")
            c.yAxis().setTickDensity(10)
        else
            # Normal tick density, just use the default setting
            c.addTitle("Default Tick Density")
        end

        # Set the labels on the x axis
        c.xAxis().setLabels(labels)

        # Add a color bar layer using the given data. Use a 1 pixel 3D border for the
        # bars.
        c.addBarLayer3(data).setBorderColor(-1, 1)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/ticks.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

def createChart(img)

    # The data for the chart
    data = [100, 125, 265, 147, 67, 105]
    labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"]

    # Create a XYChart object of size 250 x 250 pixels
    c = ChartDirector::XYChart.new(250, 250)

    # Set the plot area at (27, 25) and of size 200 x 200 pixels
    c.setPlotArea(27, 25, 200, 200)

    if img == "1"
        # High tick density, uses 10 pixels as tick spacing
        c.addTitle("Tick Density = 10 pixels")
        c.yAxis().setTickDensity(10)
    else
        # Normal tick density, just use the default setting
        c.addTitle("Default Tick Density")
    end

    # Set the labels on the x axis
    c.xAxis().setLabels(labels)

    # Add a color bar layer using the given data. Use a 1 pixel 3D border for the
    # bars.
    c.addBarLayer3(data).setBorderColor(-1, 1)

    # Output the chart
    c.makeChart("ticks%s.png" % img)
end

createChart("0")
createChart("1")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
