<HTML>
<HEAD>
<Title>Multi-Bar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Multi-Bar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/multibar.png">
<br><br>
This example demonstrates a multi-bar chart, in which bars are clustered. It also demonstrates using alternative plot area background colors, and putting legends internal to the plot area.<br><br>
A multi-bar chart is a bar chart in which multiple data sets are represented by drawing the bars side by side in a cluster. The multi-bar layer is created by using <a href="XYChart.addBarLayer2.htm">XYChart.addBarLayer2</a> with the <a href="ChartDirector.Side.htm">Side</a> predefined constant.<br><br>
In this example, the two alternative background colors in the plot area is achieved by specifying two background colors in <a href="PlotArea.setBackground.htm">PlotArea.setBackground</a>. ChartDirector also supports another method <a href="PlotArea.setAltBgColor.htm">PlotArea.setAltBgColor</a> that can be used for both horizontal and vertical alternative background colors.<br><br>
Note that in this example, a margin is configured at the top of the plot area for the legend keys. This is achieved by using <a href="Axis.setMargin.htm">Axis.setMargin</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/multibar_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class MultibarController &lt; ApplicationController

    def index()
        @title = "Multi-Bar Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the bar chart
        data0 = [100, 125, 245, 147, 67]
        data1 = [85, 156, 179, 211, 123]
        data2 = [97, 87, 56, 267, 157]
        labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

        # Create a XYChart object of size 400 x 240 pixels
        c = ChartDirector::XYChart.new(400, 240)

        # Add a title to the chart using 10 pt Arial font
        c.addTitle("         Average Weekday Network Load", "", 10)

        # Set the plot area at (50, 25) and of size 320 x 180. Use two alternative
        # background colors (0xffffc0 and 0xffffe0)
        c.setPlotArea(50, 25, 320, 180, 0xffffc0, 0xffffe0)

        # Add a legend box at (55, 18) using horizontal layout. Use 8 pt Arial font, with
        # transparent background
        c.addLegend(55, 18, false, "", 8).setBackground(ChartDirector::Transparent)

        # Add a title to the y-axis
        c.yAxis().setTitle("Throughput (MBytes Per Hour)")

        # Reserve 20 pixels at the top of the y-axis for the legend box
        c.yAxis().setTopMargin(20)

        # Set the x axis labels
        c.xAxis().setLabels(labels)

        # Add a multi-bar layer with 3 data sets and 3 pixels 3D depth
        layer = c.addBarLayer2(ChartDirector::Side, 3)
        layer.addDataSet(data0, 0xff8080, "Server #1")
        layer.addDataSet(data1, 0x80ff80, "Server #2")
        layer.addDataSet(data2, 0x8080ff, "Server #3")

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/multibar.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the bar chart
data0 = [100, 125, 245, 147, 67]
data1 = [85, 156, 179, 211, 123]
data2 = [97, 87, 56, 267, 157]
labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

# Create a XYChart object of size 400 x 240 pixels
c = ChartDirector::XYChart.new(400, 240)

# Add a title to the chart using 10 pt Arial font
c.addTitle("         Average Weekday Network Load", "", 10)

# Set the plot area at (50, 25) and of size 320 x 180. Use two alternative background
# colors (0xffffc0 and 0xffffe0)
c.setPlotArea(50, 25, 320, 180, 0xffffc0, 0xffffe0)

# Add a legend box at (55, 18) using horizontal layout. Use 8 pt Arial font, with
# transparent background
c.addLegend(55, 18, false, "", 8).setBackground(ChartDirector::Transparent)

# Add a title to the y-axis
c.yAxis().setTitle("Throughput (MBytes Per Hour)")

# Reserve 20 pixels at the top of the y-axis for the legend box
c.yAxis().setTopMargin(20)

# Set the x axis labels
c.xAxis().setLabels(labels)

# Add a multi-bar layer with 3 data sets and 3 pixels 3D depth
layer = c.addBarLayer2(ChartDirector::Side, 3)
layer.addDataSet(data0, 0xff8080, "Server #1")
layer.addDataSet(data1, 0x80ff80, "Server #2")
layer.addDataSet(data2, 0x8080ff, "Server #3")

# Output the chart
c.makeChart("multibar.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
