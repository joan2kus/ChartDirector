<HTML>
<HEAD>
<Title>Exploded Pie Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Exploded Pie Chart</p>
<hr class="separator">
<div class="content">
<img src="images/explodedpie.png">
<br><br>
This example demonstrates a pie chart with all sectors exploded. It also demonstrates many effects, such as gradient color background, rounded frame, soft drop shadow, custom sector colors, sector gradient shading, thick sector border, and using <a href="cdml.htm">CDML</a> and <a href="paramsub.htm">Parameter Substitution and Formatting</a> to format sector labels.<br><br>
<ul><li> The gradient background is achieved by using <a href="BaseChart.linearGradientColor.htm">BaseChart.linearGradientColor</a> to define the gradient color, then use <a href="BaseChart.setBackground.htm">BaseChart.setBackground</a> to set it as the chart background color.<br><br>
<li> The rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>.<br><br>
<li> The soft drop shadow is configured using <a href="BaseChart.setDropShadow.htm">BaseChart.setDropShadow</a>.<br><br>
<li> The sector colors are set using <a href="BaseChart.setColors.htm">BaseChart.setColors</a>. The sector gradient shading and thick sector border is configured using <a href="PieChart.setSectorStyle.htm">PieChart.setSectorStyle</a>.<br><br>
<li> The sector label style are configured using <a href="PieChart.setLabelStyle.htm">PieChart.setLabelStyle</a>. It returns a <a href="TextBox.htm">TextBox</a> object representing the sector label prototype. The gradient background color and rounded corners of the sector labels are configured using the <a href="Box.setBackground.htm">Box.setBackground</a> and <a href="Box.setRoundedCorners.htm">Box.setRoundedCorners</a> methods of the label prototype.<br><br>
<li> The sector label contents are configured using <a href="PieChart.setLabelFormat.htm">PieChart.setLabelFormat</a>. The template is specified using <a href="cdml.htm">CDML</a> and <a href="paramsub.htm">Parameter Substitution and Formatting</a>. It consists of two lines using different fonts. This first line shows the sector label, while the second line shows the sector value and percentage.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/explodedpie_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class ExplodedpieController &lt; ApplicationController

    def index()
        @title = "Exploded Pie Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the pie chart
        data = [21, 18, 15, 12, 8, 24]

        # The labels for the pie chart
        labels = ["Labor", "Licenses", "Taxes", "Legal", "Facilities", "Production"]

        # The colors to use for the sectors
        colors = [0x66aaee, 0xeebb22, 0xbbbbbb, 0x8844ff, 0xdd2222, 0x009900]

        # Create a PieChart object of size 600 x 360 pixels.
        c = ChartDirector::PieChart.new(600, 360)

        # Use the white on black palette, which means the default text and line colors are
        # white
        c.setColors(ChartDirector::whiteOnBlackPalette)

        # Use a vertical gradient color from deep blue (000066) to blue (0000cc) as
        # background. Use rounded corners of 20 pixels radius. Enable soft drop shadow.
        c.setBackground(c.linearGradientColor(0, 0, 0, c.getHeight(), 0x000066, 0x0000cc))
        c.setRoundedFrame(0xffffff, 20)
        c.setDropShadow()

        # Add a title using 18 pts Times New Roman Bold Italic font. Add 16 pixels top
        # margin to the title.
        c.addTitle("Exploded Pie Chart Demonstration", "timesbi.ttf", 18).setMargin2(0, 0,
            16, 0)

        # Set the center of the pie at (300, 195) and the radius to 110 pixels
        c.setPieSize(300, 195, 110)

        # Set the pie data and the pie labels
        c.setData(data, labels)

        # Set the sector colors
        c.setColors2(ChartDirector::DataColor, colors)

        # Use local gradient shading for the sectors, with 5 pixels wide semi-transparent
        # white (bbffffff) borders
        c.setSectorStyle(ChartDirector::LocalGradientShading, 0xbbffffff, 5)

        # Use the side label layout method
        c.setLabelLayout(ChartDirector::SideLayout)

        # Use 10pt Arial Bold as the default label font. Set the label box background
        # color the same as the sector color. Use soft lighting effect with light
        # direction from right. Use 8 pixels rounded corners.
        t = c.setLabelStyle("arialbd.ttf", 10, 0x000000)
        t.setBackground(ChartDirector::SameAsMainColor, ChartDirector::Transparent,
            ChartDirector::softLighting(ChartDirector::Right, 0))
        t.setRoundedCorners(8)

        # Set the sector label format. The label is centered in a 110 pixels wide bounding
        # box. It consists of two lines. The first line is the sector name. The second
        # line shows the data value and percentage.
        c.setLabelFormat(
            "&lt;*block,halign=center,width=110*&gt;{label}\n&lt;*font=arial.ttf,size=8*&gt;US$ " \
            "{value}M ({percent}%)&lt;*/*&gt;")

        # Explode all sectors 10 pixels from the center
        c.setExplode(-1, 10)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/explodedpie.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the pie chart
data = [21, 18, 15, 12, 8, 24]

# The labels for the pie chart
labels = ["Labor", "Licenses", "Taxes", "Legal", "Facilities", "Production"]

# The colors to use for the sectors
colors = [0x66aaee, 0xeebb22, 0xbbbbbb, 0x8844ff, 0xdd2222, 0x009900]

# Create a PieChart object of size 600 x 360 pixels.
c = ChartDirector::PieChart.new(600, 360)

# Use the white on black palette, which means the default text and line colors are
# white
c.setColors(ChartDirector::whiteOnBlackPalette)

# Use a vertical gradient color from deep blue (000066) to blue (0000cc) as
# background. Use rounded corners of 20 pixels radius. Enable soft drop shadow.
c.setBackground(c.linearGradientColor(0, 0, 0, c.getHeight(), 0x000066, 0x0000cc))
c.setRoundedFrame(0xffffff, 20)
c.setDropShadow()

# Add a title using 18 pts Times New Roman Bold Italic font. Add 16 pixels top margin
# to the title.
c.addTitle("Exploded Pie Chart Demonstration", "timesbi.ttf", 18).setMargin2(0, 0,
    16, 0)

# Set the center of the pie at (300, 195) and the radius to 110 pixels
c.setPieSize(300, 195, 110)

# Set the pie data and the pie labels
c.setData(data, labels)

# Set the sector colors
c.setColors2(ChartDirector::DataColor, colors)

# Use local gradient shading for the sectors, with 5 pixels wide semi-transparent
# white (bbffffff) borders
c.setSectorStyle(ChartDirector::LocalGradientShading, 0xbbffffff, 5)

# Use the side label layout method
c.setLabelLayout(ChartDirector::SideLayout)

# Use 10pt Arial Bold as the default label font. Set the label box background color
# the same as the sector color. Use soft lighting effect with light direction from
# right. Use 8 pixels rounded corners.
t = c.setLabelStyle("arialbd.ttf", 10, 0x000000)
t.setBackground(ChartDirector::SameAsMainColor, ChartDirector::Transparent,
    ChartDirector::softLighting(ChartDirector::Right, 0))
t.setRoundedCorners(8)

# Set the sector label format. The label is centered in a 110 pixels wide bounding
# box. It consists of two lines. The first line is the sector name. The second line
# shows the data value and percentage.
c.setLabelFormat(
    "&lt;*block,halign=center,width=110*&gt;{label}\n&lt;*font=arial.ttf,size=8*&gt;US$ " \
    "{value}M ({percent}%)&lt;*/*&gt;")

# Explode all sectors 10 pixels from the center
c.setExplode(-1, 10)

# Output the chart
c.makeChart("explodedpie.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
