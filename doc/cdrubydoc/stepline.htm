<HTML>
<HEAD>
<Title>Step Line Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Step Line Chart</p>
<hr class="separator">
<div class="content">
<img src="images/stepline.png">
<br><br>
This example demonstrates joining data points with steps. It also demonstrates irregularly spaced data points on an auto-scaled true date/time axis.<br><br>
The step line layer is created using <a href="XYChart.addStepLineLayer.htm">XYChart.addStepLineLayer</a>.<br><br>
Most of the sample charts in this document use enumerated x-axes. In this axis type, the data points are assumed to be evenly spread on the x-direction, so it is not necessary to supply the x values of the data points. The x-axis is treated as a series of text labels using <a href="Axis.setLabels.htm">Axis.setLabels</a> or <a href="Axis.setLabels2.htm">Axis.setLabels2</a>. The labels can be dates/times, numbers, names, or any arbitrary text in any format. Enumerated x-axis is an easy to use yet extremely flexible axis type that is suitable for most charts.<br><br>
However, for charts with data points not regularly spaced, it is necessary to supply the x values of the data points using <a href="Layer.setXData.htm">Layer.setXData</a>. In this case, ChartDirector can automatically determine the type and scale on the x-axis (auto-scaling).<br><br>
For date/time axis, in many cases one may need to control the date/time label format. This can be done using <a href="Axis.setDateScale3.htm">Axis.setDateScale3</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/stepline_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class SteplineController &lt; ApplicationController

    def index()
        @title = "Step Line Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the chart
        dataY0 = [4, 4.5, 5, 5.25, 5.75, 5.25, 5, 4.5, 4, 3, 2.5, 2.5]
        dataX0 = [Time.mktime(1997, 1, 1), Time.mktime(1998, 6, 25), Time.mktime(1999, 9,
            6), Time.mktime(2000, 2, 6), Time.mktime(2000, 9, 21), Time.mktime(2001, 3, 4
            ), Time.mktime(2001, 6, 8), Time.mktime(2002, 2, 4), Time.mktime(2002, 5, 19),
            Time.mktime(2002, 8, 16), Time.mktime(2002, 12, 1), Time.mktime(2003, 1, 1)]

        dataY1 = [7, 6.5, 6, 5, 6.5, 7, 6, 5.5, 5, 4, 3.5, 3.5]
        dataX1 = [Time.mktime(1997, 1, 1), Time.mktime(1997, 7, 1), Time.mktime(1997, 12,
            1), Time.mktime(1999, 1, 15), Time.mktime(1999, 6, 9), Time.mktime(2000, 3, 3
            ), Time.mktime(2000, 8, 13), Time.mktime(2001, 5, 5), Time.mktime(2001, 9, 16
            ), Time.mktime(2002, 3, 16), Time.mktime(2002, 6, 1), Time.mktime(2003, 1, 1)]

        # Create a XYChart object of size 500 x 270 pixels, with a pale blue (e0e0ff)
        # background, black border, 1 pixel 3D border effect and rounded corners
        c = ChartDirector::XYChart.new(600, 300, 0xe0e0ff, 0x000000, 1)
        c.setRoundedFrame()

        # Set the plotarea at (55, 60) and of size 520 x 200 pixels, with white (ffffff)
        # background. Set horizontal and vertical grid lines to grey (cccccc).
        c.setPlotArea(50, 60, 525, 200, 0xffffff, -1, -1, 0xcccccc, 0xcccccc)

        # Add a legend box at (55, 32) (top of the chart) with horizontal layout. Use 9
        # pts Arial Bold font. Set the background and border color to Transparent.
        c.addLegend(55, 32, false, "arialbd.ttf", 9).setBackground(
            ChartDirector::Transparent)

        # Add a title box to the chart using 15 pts Times Bold Italic font. The text is
        # white (ffffff) on a deep blue (000088) background, with soft lighting effect
        # from the right side.
        c.addTitle("Long Term Interest Rates", "timesbi.ttf", 15, 0xffffff).setBackground(
            0x000088, -1, ChartDirector::softLighting(ChartDirector::Right))

        # Set the y axis label format to display a percentage sign
        c.yAxis().setLabelFormat("{value}%")

        # Add a red (ff0000) step line layer to the chart and set the line width to 2
        # pixels
        layer0 = c.addStepLineLayer(dataY0, 0xff0000, "Country AAA")
        layer0.setXData(dataX0)
        layer0.setLineWidth(2)

        # Add a blue (0000ff) step line layer to the chart and set the line width to 2
        # pixels
        layer1 = c.addStepLineLayer(dataY1, 0x0000ff, "Country BBB")
        layer1.setXData(dataX1)
        layer1.setLineWidth(2)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/stepline.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the chart
dataY0 = [4, 4.5, 5, 5.25, 5.75, 5.25, 5, 4.5, 4, 3, 2.5, 2.5]
dataX0 = [Time.mktime(1997, 1, 1), Time.mktime(1998, 6, 25), Time.mktime(1999, 9, 6),
    Time.mktime(2000, 2, 6), Time.mktime(2000, 9, 21), Time.mktime(2001, 3, 4),
    Time.mktime(2001, 6, 8), Time.mktime(2002, 2, 4), Time.mktime(2002, 5, 19),
    Time.mktime(2002, 8, 16), Time.mktime(2002, 12, 1), Time.mktime(2003, 1, 1)]

dataY1 = [7, 6.5, 6, 5, 6.5, 7, 6, 5.5, 5, 4, 3.5, 3.5]
dataX1 = [Time.mktime(1997, 1, 1), Time.mktime(1997, 7, 1), Time.mktime(1997, 12, 1),
    Time.mktime(1999, 1, 15), Time.mktime(1999, 6, 9), Time.mktime(2000, 3, 3),
    Time.mktime(2000, 8, 13), Time.mktime(2001, 5, 5), Time.mktime(2001, 9, 16),
    Time.mktime(2002, 3, 16), Time.mktime(2002, 6, 1), Time.mktime(2003, 1, 1)]

# Create a XYChart object of size 500 x 270 pixels, with a pale blue (e0e0ff)
# background, black border, 1 pixel 3D border effect and rounded corners
c = ChartDirector::XYChart.new(600, 300, 0xe0e0ff, 0x000000, 1)
c.setRoundedFrame()

# Set the plotarea at (55, 60) and of size 520 x 200 pixels, with white (ffffff)
# background. Set horizontal and vertical grid lines to grey (cccccc).
c.setPlotArea(50, 60, 525, 200, 0xffffff, -1, -1, 0xcccccc, 0xcccccc)

# Add a legend box at (55, 32) (top of the chart) with horizontal layout. Use 9 pts
# Arial Bold font. Set the background and border color to Transparent.
c.addLegend(55, 32, false, "arialbd.ttf", 9).setBackground(ChartDirector::Transparent
    )

# Add a title box to the chart using 15 pts Times Bold Italic font. The text is white
# (ffffff) on a deep blue (000088) background, with soft lighting effect from the
# right side.
c.addTitle("Long Term Interest Rates", "timesbi.ttf", 15, 0xffffff).setBackground(
    0x000088, -1, ChartDirector::softLighting(ChartDirector::Right))

# Set the y axis label format to display a percentage sign
c.yAxis().setLabelFormat("{value}%")

# Add a red (ff0000) step line layer to the chart and set the line width to 2 pixels
layer0 = c.addStepLineLayer(dataY0, 0xff0000, "Country AAA")
layer0.setXData(dataX0)
layer0.setLineWidth(2)

# Add a blue (0000ff) step line layer to the chart and set the line width to 2 pixels
layer1 = c.addStepLineLayer(dataY1, 0x0000ff, "Country BBB")
layer1.setXData(dataX1)
layer1.setLineWidth(2)

# Output the chart
c.makeChart("stepline.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
