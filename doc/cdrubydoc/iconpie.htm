<HTML>
<HEAD>
<Title>Icon Pie Chart (1)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Icon Pie Chart (1)</p>
<hr class="separator">
<div class="content">
<img src="images/iconpie.png">
<br><br>
This example demonstrates using <a href="cdml.htm">CDML</a> and <a href="paramsub.htm">Parameter Substitution and Formatting</a> to include icons in sector labels. It also demonstrates gradient background color, glass shading effect for the title and rounded corners for the chart frame.<br><br>
<ul><li> The gradient background color is created using <a href="ChartDirector.metalColor.htm">ChartDirector.metalColor</a>, with blue as the base color, and in vertical orientation.<br><br>
<li> The rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>.<br><br>
<li> The glass shading effect of the title is defined using <a href="ChartDirector.glassEffect.htm">ChartDirector.glassEffect</a>, then applied to the title using <a href="Box.setBackground.htm">Box.setBackground</a> of the title <a href="TextBox.htm">TextBox</a> object.<br><br>
<li> The icons file names are added to the chart as an extra field using <a href="BaseChart.addExtraField.htm">BaseChart.addExtraField</a>.<br><br>
<li> The sector label format string is specified using <a href="cdml.htm">CDML</a> and <a href="paramsub.htm">Parameter Substitution and Formatting</a> as:<br><br>
<div style="margin-left:25;font-family:courier new,courier"> &lt;*block,valign=absmiddle*&gt;&lt;*img={field0}*&gt; &lt;*block*&gt;{label}&lt;*br*&gt;{percent}%&lt;*/*&gt;&lt;*/*&gt; </div><br>
This means that the sector label is a block, which contains an image followed by another text block. The image file is taken from the extra field. The text block contains two lines showing the sector name and percentage.<br><br>
<li> The format string is applied to the chart using <a href="PieChart.setLabelFormat.htm">PieChart.setLabelFormat</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/iconpie_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class IconpieController &lt; ApplicationController

    def index()
        @title = "Icon Pie Chart (1)"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the pie chart
        data = [72, 18, 15, 12]

        # The depths for the sectors
        depths = [30, 20, 10, 10]

        # The labels for the pie chart
        labels = ["Sunny", "Cloudy", "Rainy", "Snowy"]

        # The icons for the sectors
        icons = ["sun.png", "cloud.png", "rain.png", "snowy.png"]

        # Create a PieChart object of size 400 x 310 pixels, with a blue (CCCCFF) vertical
        # metal gradient background, black border, 1 pixel 3D border effect and rounded
        # corners
        c = ChartDirector::PieChart.new(400, 310, ChartDirector::metalColor(0xccccff, 0),
            0x000000, 1)
        c.setRoundedFrame()

        # Set directory for loading images to current script directory
        c.setSearchPath(File.dirname(__FILE__))

        # Set the center of the pie at (200, 180) and the radius to 100 pixels
        c.setPieSize(200, 180, 100)

        # Add a title box using 15 pts Times Bold Italic font, on a blue (CCCCFF)
        # background with glass effect
        c.addTitle("Weather Profile in Wonderland", "timesbi.ttf", 15).setBackground(
            0xccccff, 0x000000, ChartDirector::glassEffect())

        # Set the pie data and the pie labels
        c.setData(data, labels)

        # Add icons to the chart as a custom field
        c.addExtraField(icons)

        # Configure the sector labels using CDML to include the icon images
        c.setLabelFormat(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img={field0}*&gt; &lt;*block*&gt;{label}\n{percent}%" \
            "&lt;*/*&gt;&lt;*/*&gt;")

        # Draw the pie in 3D with variable 3D depths
        c.set3D2(depths)

        # Set the start angle to 225 degrees may improve layout when the depths of the
        # sector are sorted in descending order, because it ensures the tallest sector is
        # at the back.
        c.setStartAngle(225)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/iconpie.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the pie chart
data = [72, 18, 15, 12]

# The depths for the sectors
depths = [30, 20, 10, 10]

# The labels for the pie chart
labels = ["Sunny", "Cloudy", "Rainy", "Snowy"]

# The icons for the sectors
icons = ["sun.png", "cloud.png", "rain.png", "snowy.png"]

# Create a PieChart object of size 400 x 310 pixels, with a blue (CCCCFF) vertical
# metal gradient background, black border, 1 pixel 3D border effect and rounded
# corners
c = ChartDirector::PieChart.new(400, 310, ChartDirector::metalColor(0xccccff, 0),
    0x000000, 1)
c.setRoundedFrame()

# Set the center of the pie at (200, 180) and the radius to 100 pixels
c.setPieSize(200, 180, 100)

# Add a title box using 15 pts Times Bold Italic font, on a blue (CCCCFF) background
# with glass effect
c.addTitle("Weather Profile in Wonderland", "timesbi.ttf", 15).setBackground(
    0xccccff, 0x000000, ChartDirector::glassEffect())

# Set the pie data and the pie labels
c.setData(data, labels)

# Add icons to the chart as a custom field
c.addExtraField(icons)

# Configure the sector labels using CDML to include the icon images
c.setLabelFormat(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img={field0}*&gt; &lt;*block*&gt;{label}\n{percent}%&lt;*/*&gt;" \
    "&lt;*/*&gt;")

# Draw the pie in 3D with variable 3D depths
c.set3D2(depths)

# Set the start angle to 225 degrees may improve layout when the depths of the sector
# are sorted in descending order, because it ensures the tallest sector is at the
# back.
c.setStartAngle(225)

# Output the chart
c.makeChart("iconpie.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
