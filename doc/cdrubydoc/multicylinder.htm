<HTML>
<HEAD>
<Title>Multi-Cylinder Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Multi-Cylinder Chart</p>
<hr class="separator">
<div class="content">
<img src="images/multicylinder.png">
<br><br>
This example demonstrates a multi-bar chart with cylinder shading effects. It also demonstrates using dotted line style for grid lines.<br><br>
The cylinder shading effect is the result of using the cylinder bar shape in 2D. This is by using <a href="BarLayer.setBarShape.htm">BarLayer.setBarShape</a> with <a href="ChartDirector.CircleShape.htm">CircleShape</a>.<br><br>
The dotted grid lines in this example is configured by using <a href="BaseChart.dashLineColor.htm">BaseChart.dashLineColor</a> to define the dotted line color, then use it in <a href="XYChart.setPlotArea.htm">XYChart.setPlotArea</a> as the the grid line color.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/multicylinder_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class MulticylinderController &lt; ApplicationController

    def index()
        @title = "Multi-Cylinder Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # Data for the chart
        data0 = [100, 125, 245, 147, 67, 96, 160, 145, 97, 167, 220, 125]
        data1 = [85, 156, 179, 211, 123, 225, 127, 99, 111, 260, 175, 156]
        data2 = [97, 87, 56, 267, 157, 157, 67, 156, 77, 87, 197, 87]
        labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct",
            "Nov", "Dec"]

        # Create a XYChart object of size 560 x 280 pixels.
        c = ChartDirector::XYChart.new(560, 280)

        # Add a title to the chart using 14 pts Arial Bold Italic font
        c.addTitle("     Average Weekly Network Load", "arialbi.ttf", 14)

        # Set the plotarea at (50, 50) and of 500 x 200 pixels in size. Use alternating
        # light grey (f8f8f8) / white (ffffff) background. Set border to transparent and
        # use grey (CCCCCC) dotted lines as horizontal and vertical grid lines
        c.setPlotArea(50, 50, 500, 200, 0xffffff, 0xf8f8f8, ChartDirector::Transparent,
            c.dashLineColor(0xcccccc, ChartDirector::DotLine), c.dashLineColor(0xcccccc,
            ChartDirector::DotLine))

        # Add a legend box at (50, 22) using horizontal layout. Use 10 pt Arial Bold
        # Italic font, with transparent background
        c.addLegend(50, 22, false, "arialbi.ttf", 10).setBackground(
            ChartDirector::Transparent)

        # Set the x axis labels
        c.xAxis().setLabels(labels)

        # Draw the ticks between label positions (instead of at label positions)
        c.xAxis().setTickOffset(0.5)

        # Add axis title
        c.yAxis().setTitle("Throughput (MBytes Per Hour)")

        # Set axis line width to 2 pixels
        c.xAxis().setWidth(2)
        c.yAxis().setWidth(2)

        # Add a multi-bar layer with 3 data sets
        layer = c.addBarLayer2(ChartDirector::Side)
        layer.addDataSet(data0, 0xff0000, "Server #1")
        layer.addDataSet(data1, 0x00ff00, "Server #2")
        layer.addDataSet(data2, 0x0000ff, "Server #3")

        # Set bar shape to circular (cylinder)
        layer.setBarShape(ChartDirector::CircleShape)

        # Configure the bars within a group to touch each others (no gap)
        layer.setBarGap(0.2, ChartDirector::TouchBar)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/multicylinder.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# Data for the chart
data0 = [100, 125, 245, 147, 67, 96, 160, 145, 97, 167, 220, 125]
data1 = [85, 156, 179, 211, 123, 225, 127, 99, 111, 260, 175, 156]
data2 = [97, 87, 56, 267, 157, 157, 67, 156, 77, 87, 197, 87]
labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct",
    "Nov", "Dec"]

# Create a XYChart object of size 560 x 280 pixels.
c = ChartDirector::XYChart.new(560, 280)

# Add a title to the chart using 14 pts Arial Bold Italic font
c.addTitle("     Average Weekly Network Load", "arialbi.ttf", 14)

# Set the plotarea at (50, 50) and of 500 x 200 pixels in size. Use alternating light
# grey (f8f8f8) / white (ffffff) background. Set border to transparent and use grey
# (CCCCCC) dotted lines as horizontal and vertical grid lines
c.setPlotArea(50, 50, 500, 200, 0xffffff, 0xf8f8f8, ChartDirector::Transparent,
    c.dashLineColor(0xcccccc, ChartDirector::DotLine), c.dashLineColor(0xcccccc,
    ChartDirector::DotLine))

# Add a legend box at (50, 22) using horizontal layout. Use 10 pt Arial Bold Italic
# font, with transparent background
c.addLegend(50, 22, false, "arialbi.ttf", 10).setBackground(
    ChartDirector::Transparent)

# Set the x axis labels
c.xAxis().setLabels(labels)

# Draw the ticks between label positions (instead of at label positions)
c.xAxis().setTickOffset(0.5)

# Add axis title
c.yAxis().setTitle("Throughput (MBytes Per Hour)")

# Set axis line width to 2 pixels
c.xAxis().setWidth(2)
c.yAxis().setWidth(2)

# Add a multi-bar layer with 3 data sets
layer = c.addBarLayer2(ChartDirector::Side)
layer.addDataSet(data0, 0xff0000, "Server #1")
layer.addDataSet(data1, 0x00ff00, "Server #2")
layer.addDataSet(data2, 0x0000ff, "Server #3")

# Set bar shape to circular (cylinder)
layer.setBarShape(ChartDirector::CircleShape)

# Configure the bars within a group to touch each others (no gap)
layer.setBarGap(0.2, ChartDirector::TouchBar)

# Output the chart
c.makeChart("multicylinder.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
