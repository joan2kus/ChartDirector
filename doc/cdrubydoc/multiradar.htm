<HTML>
<HEAD>
<Title>Multi Radar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Multi Radar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/multiradar.png">
<br><br>
This example demonstrates a radar chart with two layers and a number of chart formatting effects.<br><br>
<ul><li> Create a <a href="PolarChart.htm">PolarChart</a> object using <a href="PolarChart.PolarChart.htm">PolarChart.PolarChart</a>, using a golden color created with <a href="ChartDirector.goldColor.htm">ChartDirector.goldColor</a> as the background color.<br><br>
<li> Add a title to the chart with white text on a deep blue background using <a href="BaseChart.addTitle.htm">BaseChart.addTitle</a>.<br><br>
<li> Specify the polar plot area of the chart using <a href="PolarChart.setPlotArea.htm">PolarChart.setPlotArea</a>.<br><br>
<li> Add a legend box to the chart using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a>. Set the legend box background to silver with 3D border effect using <a href="Box.setBackground.htm">Box.setBackground</a>. The silver color is created using <a href="ChartDirector.silverColor.htm">ChartDirector.silverColor</a>.<br><br>
<li> Add two polar area layers using <a href="PolarChart.addAreaLayer.htm">PolarChart.addAreaLayer</a>. Use semi-transparent colors as the area fill colors to avoid the top layer blocking the bottom layer.<br><br>
<li> Add two polar line layers with <a href="PolarChart.addLineLayer.htm">PolarChart.addLineLayer</a>, using the same data as the polar area layer. Set a thick line width using <a href="PolarLayer.setLineWidth.htm">PolarLayer.setLineWidth</a>. The line layers becomes borders of the area layers to highlight the areas.<br><br>
<li> Specify the labels on the angular axis using <a href="AngularAxis.setLabels.htm">AngularAxis.setLabels</a>.<br><br>
<li> Generate the chart using <a href="BaseChart.makeChart2.htm">BaseChart.makeChart2</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/multiradar_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class MultiradarController &lt; ApplicationController

    def index()
        @title = "Multi Radar Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the chart
        data0 = [90, 60, 85, 75, 55]
        data1 = [60, 80, 70, 80, 85]

        # The labels for the chart
        labels = ["Speed", "Reliability", "Comfort", "Safety", "Efficiency"]

        # Create a PolarChart object of size 480 x 380 pixels. Set background color to
        # gold, with 1 pixel 3D border effect
        c = ChartDirector::PolarChart.new(480, 380, ChartDirector::goldColor(), 0x000000,
            1)

        # Add a title to the chart using 15 pts Times Bold Italic font. The title text is
        # white (ffffff) on a deep blue (000080) background
        c.addTitle("Space Travel Vehicles Compared", "timesbi.ttf", 15, 0xffffff
            ).setBackground(0x000080)

        # Set plot area center at (240, 210), with 150 pixels radius, and a white (ffffff)
        # background.
        c.setPlotArea(240, 210, 150, 0xffffff)

        # Add a legend box at top right corner (470, 35) using 10 pts Arial Bold font. Set
        # the background to silver, with 1 pixel 3D border effect.
        b = c.addLegend(470, 35, true, "arialbd.ttf", 10)
        b.setAlignment(ChartDirector::TopRight)
        b.setBackground(ChartDirector::silverColor(), ChartDirector::Transparent, 1)

        # Add an area layer to the chart using semi-transparent blue (0x806666cc). Add a
        # blue (0x6666cc) line layer using the same data with 3 pixel line width to
        # highlight the border of the area.
        c.addAreaLayer(data0, 0x806666cc, "Model Saturn")
        c.addLineLayer(data0, 0x6666cc).setLineWidth(3)

        # Add an area layer to the chart using semi-transparent red (0x80cc6666). Add a
        # red (0xcc6666) line layer using the same data with 3 pixel line width to
        # highlight the border of the area.
        c.addAreaLayer(data1, 0x80cc6666, "Model Jupiter")
        c.addLineLayer(data1, 0xcc6666).setLineWidth(3)

        # Set the labels to the angular axis as spokes.
        c.angularAxis().setLabels(labels)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/multiradar.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the chart
data0 = [90, 60, 85, 75, 55]
data1 = [60, 80, 70, 80, 85]

# The labels for the chart
labels = ["Speed", "Reliability", "Comfort", "Safety", "Efficiency"]

# Create a PolarChart object of size 480 x 380 pixels. Set background color to gold,
# with 1 pixel 3D border effect
c = ChartDirector::PolarChart.new(480, 380, ChartDirector::goldColor(), 0x000000, 1)

# Add a title to the chart using 15 pts Times Bold Italic font. The title text is
# white (ffffff) on a deep blue (000080) background
c.addTitle("Space Travel Vehicles Compared", "timesbi.ttf", 15, 0xffffff
    ).setBackground(0x000080)

# Set plot area center at (240, 210), with 150 pixels radius, and a white (ffffff)
# background.
c.setPlotArea(240, 210, 150, 0xffffff)

# Add a legend box at top right corner (470, 35) using 10 pts Arial Bold font. Set
# the background to silver, with 1 pixel 3D border effect.
b = c.addLegend(470, 35, true, "arialbd.ttf", 10)
b.setAlignment(ChartDirector::TopRight)
b.setBackground(ChartDirector::silverColor(), ChartDirector::Transparent, 1)

# Add an area layer to the chart using semi-transparent blue (0x806666cc). Add a blue
# (0x6666cc) line layer using the same data with 3 pixel line width to highlight the
# border of the area.
c.addAreaLayer(data0, 0x806666cc, "Model Saturn")
c.addLineLayer(data0, 0x6666cc).setLineWidth(3)

# Add an area layer to the chart using semi-transparent red (0x80cc6666). Add a red
# (0xcc6666) line layer using the same data with 3 pixel line width to highlight the
# border of the area.
c.addAreaLayer(data1, 0x80cc6666, "Model Jupiter")
c.addLineLayer(data1, 0xcc6666).setLineWidth(3)

# Set the labels to the angular axis as spokes.
c.angularAxis().setLabels(labels)

# Output the chart
c.makeChart("multiradar.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
