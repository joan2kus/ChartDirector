<HTML>
<HEAD>
<Title>Texture Donut Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Texture Donut Chart</p>
<hr class="separator">
<div class="content">
<img src="images/texturedonut.png">
<br><br>
This example demonstrates wooden, rocky and marble texture effects by using pattern colors to load image patterns.<br><br>
In ChartDirector, metallic and pattern colors are just like normal ARGB colors, and are represented as a 32-bit integer. They can be applied to anything that can be colored. In this example, metallic colors are applied to the background, while pattern colors are applied to the donut slices to create texture effects.<br><br>
<ul><li> <a href="BaseChart.patternColor2.htm">BaseChart.patternColor2</a> is used to load the texture images. It returns an array of integers representing the pattern colors created from the images.<br><br>
<li> The pattern colors are then set into the <a href="ChartDirector.DataColor.htm">DataColor</a> positions of the default palette using <a href="BaseChart.setColor.htm">BaseChart.setColor</a>. These colors will be used for the sectors.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/texturedonut_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class TexturedonutController &lt; ApplicationController

    def index()
        @title = "Texture Donut Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the pie chart
        data = [18, 45, 28]

        # The labels for the pie chart
        labels = ["Marble", "Wood", "Granite"]

        # The icons for the sectors
        texture = ["marble3.png", "wood.png", "rock.png"]

        # Create a PieChart object of size 400 x 330 pixels, with a metallic green
        # (88EE88) background, black border and 1 pixel 3D border effect
        c = ChartDirector::PieChart.new(400, 330, ChartDirector::metalColor(0x88ee88),
            0x000000, 1)

        # Set directory for loading images to current script directory
        c.setSearchPath(File.dirname(__FILE__))

        # Set donut center at (200, 160), and outer/inner radii as 120/60 pixels
        c.setDonutSize(200, 160, 120, 60)

        # Add a title box using 15 pts Times Bold Italic font and metallic deep green
        # (008000) background color
        c.addTitle("Material Composition", "timesbi.ttf", 15).setBackground(
            ChartDirector::metalColor(0x008000))

        # Set the pie data and the pie labels
        c.setData(data, labels)

        # Set the colors of the sectors to the 3 texture patterns
        c.setColor(ChartDirector::DataColor + 0, c.patternColor2(texture[0]))
        c.setColor(ChartDirector::DataColor + 1, c.patternColor2(texture[1]))
        c.setColor(ChartDirector::DataColor + 2, c.patternColor2(texture[2]))

        # Draw the pie in 3D with a 3D depth of 30 pixels
        c.set3D(30)

        # Use 12 pts Arial Bold Italic as the sector label font
        c.setLabelStyle("arialbi.ttf", 12)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/texturedonut.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the pie chart
data = [18, 45, 28]

# The labels for the pie chart
labels = ["Marble", "Wood", "Granite"]

# The icons for the sectors
texture = ["marble3.png", "wood.png", "rock.png"]

# Create a PieChart object of size 400 x 330 pixels, with a metallic green (88EE88)
# background, black border and 1 pixel 3D border effect
c = ChartDirector::PieChart.new(400, 330, ChartDirector::metalColor(0x88ee88),
    0x000000, 1)

# Set donut center at (200, 160), and outer/inner radii as 120/60 pixels
c.setDonutSize(200, 160, 120, 60)

# Add a title box using 15 pts Times Bold Italic font and metallic deep green
# (008000) background color
c.addTitle("Material Composition", "timesbi.ttf", 15).setBackground(
    ChartDirector::metalColor(0x008000))

# Set the pie data and the pie labels
c.setData(data, labels)

# Set the colors of the sectors to the 3 texture patterns
c.setColor(ChartDirector::DataColor + 0, c.patternColor2(texture[0]))
c.setColor(ChartDirector::DataColor + 1, c.patternColor2(texture[1]))
c.setColor(ChartDirector::DataColor + 2, c.patternColor2(texture[2]))

# Draw the pie in 3D with a 3D depth of 30 pixels
c.set3D(30)

# Use 12 pts Arial Bold Italic as the sector label font
c.setLabelStyle("arialbi.ttf", 12)

# Output the chart
c.makeChart("texturedonut.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
