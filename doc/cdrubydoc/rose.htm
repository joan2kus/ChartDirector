<HTML>
<HEAD>
<Title>Simple Rose Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Simple Rose Chart</p>
<hr class="separator">
<div class="content">
<img src="images/rose.png">
<br><br>
This example demonstrates how to create a rose chart.<br><br>
A rose chart is basically a polar chart with sectors of variable radius. This can be achieved by creating a <a href="PolarChart.htm">PolarChart</a> object as the graph paper, and adding sector zones on it using <a href="AngularAxis.addZone.htm">AngularAxis.addZone</a>.<br><br>
To enable auto-scale of the axis, in this example, we also add the radius data to a transparent line layer using <a href="PolarChart.addLineLayer.htm">PolarChart.addLineLayer</a>. The line layer has no visible effect, but it causes the radial axis to auto-scale so that it covers the radius data.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/rose_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class RoseController &lt; ApplicationController

    def index()
        @title = "Simple Rose Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # Data for the chart
        data = [9.4, 1.8, 2.1, 2.3, 3.5, 7.7, 8.8, 6.1, 5.0, 3.1, 6.0, 4.3, 5.1, 2.6, 1.5,
            2.2, 5.1, 4.3, 4.0, 9.0, 1.7, 8.8, 9.9, 9.5]
        angles = [0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225,
            240, 255, 270, 285, 300, 315, 330, 345]

        # Create a PolarChart object of size 460 x 460 pixels, with a silver background
        # and a 1 pixel 3D border
        c = ChartDirector::PolarChart.new(460, 460, ChartDirector::silverColor(),
            0x000000, 1)

        # Add a title to the chart at the top left corner using 15pts Arial Bold Italic
        # font. Use white text on deep blue background.
        c.addTitle("Polar Vector Chart Demonstration", "arialbi.ttf", 15, 0xffffff
            ).setBackground(0x000080)

        # Set plot area center at (230, 240) with radius 180 pixels and white background
        c.setPlotArea(230, 240, 180, 0xffffff)

        # Set the grid style to circular grid
        c.setGridStyle(false)

        # Set angular axis as 0 - 360, with a spoke every 30 units
        c.angularAxis().setLinearScale(0, 360, 30)

        # Add sectors to the chart as sector zones
        0.upto(data.length - 1) do |i|
            c.angularAxis().addZone(angles[i], angles[i] + 15, 0, data[i], 0x33ff33,
                0x008000)
        end

        # Add an Transparent invisible layer to ensure the axis is auto-scaled using the
        # data
        c.addLineLayer(data, ChartDirector::Transparent)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/rose.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# Data for the chart
data = [9.4, 1.8, 2.1, 2.3, 3.5, 7.7, 8.8, 6.1, 5.0, 3.1, 6.0, 4.3, 5.1, 2.6, 1.5,
    2.2, 5.1, 4.3, 4.0, 9.0, 1.7, 8.8, 9.9, 9.5]
angles = [0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225,
    240, 255, 270, 285, 300, 315, 330, 345]

# Create a PolarChart object of size 460 x 460 pixels, with a silver background and a
# 1 pixel 3D border
c = ChartDirector::PolarChart.new(460, 460, ChartDirector::silverColor(), 0x000000, 1
    )

# Add a title to the chart at the top left corner using 15pts Arial Bold Italic font.
# Use white text on deep blue background.
c.addTitle("Polar Vector Chart Demonstration", "arialbi.ttf", 15, 0xffffff
    ).setBackground(0x000080)

# Set plot area center at (230, 240) with radius 180 pixels and white background
c.setPlotArea(230, 240, 180, 0xffffff)

# Set the grid style to circular grid
c.setGridStyle(false)

# Set angular axis as 0 - 360, with a spoke every 30 units
c.angularAxis().setLinearScale(0, 360, 30)

# Add sectors to the chart as sector zones
0.upto(data.length - 1) do |i|
    c.angularAxis().addZone(angles[i], angles[i] + 15, 0, data[i], 0x33ff33, 0x008000
        )
end

# Add an Transparent invisible layer to ensure the axis is auto-scaled using the data
c.addLineLayer(data, ChartDirector::Transparent)

# Output the chart
c.makeChart("rose.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
