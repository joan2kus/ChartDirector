<HTML>
<HEAD>
<Title>Surface Perspective</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Surface Perspective</p>
<hr class="separator">
<div class="content">
<img src="images/surfaceperspective0.jpg">&nbsp;&nbsp;<img src="images/surfaceperspective1.jpg">&nbsp;&nbsp;<img src="images/surfaceperspective2.jpg">&nbsp;&nbsp;<img src="images/surfaceperspective3.jpg">&nbsp;&nbsp;<img src="images/surfaceperspective4.jpg">&nbsp;&nbsp;<img src="images/surfaceperspective5.jpg">
<br><br>
This example demonstrates the effects of various perspective depth, configured using <a href="SurfaceChart.setPerspective.htm">SurfaceChart.setPerspective</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/surfaceperspective_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class SurfaceperspectiveController &lt; ApplicationController

    def index()
        @title = "Surface Perspective"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 6
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The x and y coordinates of the grid
        dataX = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
        dataY = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]

        # The values at the grid points. In this example, we will compute the values using
        # the formula z = sin((x - 0.5) * 2 * pi) * sin((y - 0.5) * 2 * pi)
        dataZ = Array.new((dataX.length) * (dataY.length))
        0.upto(dataY.length - 1) do |yIndex|
            y = (dataY[yIndex] - 0.5) * 2 * 3.1416
            0.upto(dataX.length - 1) do |xIndex|
                x = (dataX[xIndex] - 0.5) * 2 * 3.1416
                dataZ[yIndex * (dataX.length) + xIndex] = Math.sin(x) * Math.sin(y)
            end
        end

        # the perspective level
        perspective = (params["img"]).to_i * 12

        # Create a SurfaceChart object of size 360 x 360 pixels, with white (ffffff)
        # background and grey (888888) border.
        c = ChartDirector::SurfaceChart.new(360, 360, 0xffffff, 0x888888)

        # Set the perspective level
        c.setPerspective(perspective)
        c.addTitle(sprintf("Perspective = %s", perspective))

        # Set the center of the plot region at (195, 165), and set width x depth x height
        # to 200 x 200 x 150 pixels
        c.setPlotRegion(195, 165, 200, 200, 150)

        # Set the plot region wall thichness to 5 pixels
        c.setWallThickness(5)

        # Set the elevation and rotation angles to 30 and 30 degrees
        c.setViewAngle(30, 30)

        # Set the data to use to plot the chart
        c.setData(dataX, dataY, dataZ)

        # Spline interpolate data to a 40 x 40 grid for a smooth surface
        c.setInterpolation(40, 40)

        # Use smooth gradient coloring.
        c.colorAxis().setColorGradient()

        # Output the chart
        send_data(c.makeChart2(ChartDirector::JPG), :type =&gt; "image/jpeg",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/surfaceperspective.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

def createChart(img)

    # The x and y coordinates of the grid
    dataX = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    dataY = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]

    # The values at the grid points. In this example, we will compute the values
    # using the formula z = sin((x - 0.5) * 2 * pi) * sin((y - 0.5) * 2 * pi)
    dataZ = Array.new((dataX.length) * (dataY.length))
    0.upto(dataY.length - 1) do |yIndex|
        y = (dataY[yIndex] - 0.5) * 2 * 3.1416
        0.upto(dataX.length - 1) do |xIndex|
            x = (dataX[xIndex] - 0.5) * 2 * 3.1416
            dataZ[yIndex * (dataX.length) + xIndex] = Math.sin(x) * Math.sin(y)
        end
    end

    # the perspective level
    perspective = img.to_i * 12

    # Create a SurfaceChart object of size 360 x 360 pixels, with white (ffffff)
    # background and grey (888888) border.
    c = ChartDirector::SurfaceChart.new(360, 360, 0xffffff, 0x888888)

    # Set the perspective level
    c.setPerspective(perspective)
    c.addTitle(sprintf("Perspective = %s", perspective))

    # Set the center of the plot region at (195, 165), and set width x depth x height
    # to 200 x 200 x 150 pixels
    c.setPlotRegion(195, 165, 200, 200, 150)

    # Set the plot region wall thichness to 5 pixels
    c.setWallThickness(5)

    # Set the elevation and rotation angles to 30 and 30 degrees
    c.setViewAngle(30, 30)

    # Set the data to use to plot the chart
    c.setData(dataX, dataY, dataZ)

    # Spline interpolate data to a 40 x 40 grid for a smooth surface
    c.setInterpolation(40, 40)

    # Use smooth gradient coloring.
    c.colorAxis().setColorGradient()

    # Output the chart
    c.makeChart("surfaceperspective%s.jpg" % img)
end

createChart("0")
createChart("1")
createChart("2")
createChart("3")
createChart("4")
createChart("5")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
