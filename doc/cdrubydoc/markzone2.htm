<HTML>
<HEAD>
<Title>Marks and Zones (2)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Marks and Zones (2)</p>
<hr class="separator">
<div class="content">
<img src="images/markzone2.png">
<br><br>
This example demonstrates adding marks and zones to the chart, and positioning mark labels.<br><br>
The chart in the example consists of three mark lines (one horizontal and two vertical) and one vertical zone. The mark lines are created using <a href="Axis.addMark.htm">Axis.addMark</a>. The zone is created using <a href="Axis.addZone.htm">Axis.addZone</a>.<br><br>
By default, mark labels will be drawn as axis labels. In this example, the label of the red mark line is moved to the top center of the mark line using <a href="TextBox.setAlignment.htm">TextBox.setAlignment</a> with <a href="ChartDirector.TopCenter.htm">TopCenter</a> alignment.<br><br>
Similarly, the labels for the brown mark lines are moved to the left and right sides of the mark lines, with the text rotated by 90 degrees. This is achieved by using <a href="TextBox.setAlignment.htm">TextBox.setAlignment</a> with <a href="ChartDirector.Left.htm">Left</a> and <a href="ChartDirector.Right.htm">Right</a> alignments, and using <a href="TextBox.setFontAngle.htm">TextBox.setFontAngle</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/markzone2_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class Markzone2Controller &lt; ApplicationController

    def index()
        @title = "Marks and Zones (2)"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the chart
        data = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59,
            73, 77, 84, 82, 80, 84, 89]

        # The labels for the chart. Note the "-" means a minor tick.
        labels = ["0\nJun 4", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11",
            "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23",
            "0\nJun 5"]

        # Create a XYChart object of size 400 x 270 pixels
        c = ChartDirector::XYChart.new(400, 270)

        # Set the plotarea at (80, 25) and of size 300 x 200 pixels. Use alternate color
        # background (0xeeeeee) and (0xffffff). Set border and grid colors to grey
        # (0xc0c0c0).
        c.setPlotArea(50, 25, 300, 200, 0xeeeeee, 0xffffff, 0xc0c0c0, 0xc0c0c0, 0xc0c0c0)

        # Add a title to the chart using 14 pts Times Bold Italic font
        c.addTitle("Server Monitor", "timesbi.ttf", 14)

        # Add a title to the y axis
        c.yAxis().setTitle("Server Load (MBytes)")

        # Set the y axis width to 2 pixels
        c.yAxis().setWidth(2)

        # Set the labels on the x axis.
        c.xAxis().setLabels(labels)

        # Display 1 out of 3 labels on the x-axis. Show minor ticks for remaining labels.
        c.xAxis().setLabelStep(3, 1)

        # Set the x axis width to 2 pixels
        c.xAxis().setWidth(2)

        # Add a horizontal red (0x800080) mark line at y = 80
        yMark = c.yAxis().addMark(80, 0xff0000, "Critical Threshold Set Point")

        # Set the mark line width to 2 pixels
        yMark.setLineWidth(2)

        # Put the mark label at the top center of the mark line
        yMark.setAlignment(ChartDirector::TopCenter)

        # Add an orange (0xffcc66) zone from x = 18 to x = 20
        c.xAxis().addZone(18, 20, 0xffcc66)

        # Add a vertical brown (0x995500) mark line at x = 18
        xMark1 = c.xAxis().addMark(18, 0x995500, "Backup Start")

        # Set the mark line width to 2 pixels
        xMark1.setLineWidth(2)

        # Put the mark label at the left of the mark line
        xMark1.setAlignment(ChartDirector::Left)

        # Rotate the mark label by 90 degrees so it draws vertically
        xMark1.setFontAngle(90)

        # Add a vertical brown (0x995500) mark line at x = 20
        xMark2 = c.xAxis().addMark(20, 0x995500, "Backup End")

        # Set the mark line width to 2 pixels
        xMark2.setLineWidth(2)

        # Put the mark label at the right of the mark line
        xMark2.setAlignment(ChartDirector::Right)

        # Rotate the mark label by 90 degrees so it draws vertically
        xMark2.setFontAngle(90)

        # Add a green (0x00cc00) line layer with line width of 2 pixels
        c.addLineLayer(data, 0x00cc00).setLineWidth(2)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/markzone2.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the chart
data = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59, 73,
    77, 84, 82, 80, 84, 89]

# The labels for the chart. Note the "-" means a minor tick.
labels = ["0\nJun 4", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
    "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "0\nJun 5"]

# Create a XYChart object of size 400 x 270 pixels
c = ChartDirector::XYChart.new(400, 270)

# Set the plotarea at (80, 25) and of size 300 x 200 pixels. Use alternate color
# background (0xeeeeee) and (0xffffff). Set border and grid colors to grey
# (0xc0c0c0).
c.setPlotArea(50, 25, 300, 200, 0xeeeeee, 0xffffff, 0xc0c0c0, 0xc0c0c0, 0xc0c0c0)

# Add a title to the chart using 14 pts Times Bold Italic font
c.addTitle("Server Monitor", "timesbi.ttf", 14)

# Add a title to the y axis
c.yAxis().setTitle("Server Load (MBytes)")

# Set the y axis width to 2 pixels
c.yAxis().setWidth(2)

# Set the labels on the x axis.
c.xAxis().setLabels(labels)

# Display 1 out of 3 labels on the x-axis. Show minor ticks for remaining labels.
c.xAxis().setLabelStep(3, 1)

# Set the x axis width to 2 pixels
c.xAxis().setWidth(2)

# Add a horizontal red (0x800080) mark line at y = 80
yMark = c.yAxis().addMark(80, 0xff0000, "Critical Threshold Set Point")

# Set the mark line width to 2 pixels
yMark.setLineWidth(2)

# Put the mark label at the top center of the mark line
yMark.setAlignment(ChartDirector::TopCenter)

# Add an orange (0xffcc66) zone from x = 18 to x = 20
c.xAxis().addZone(18, 20, 0xffcc66)

# Add a vertical brown (0x995500) mark line at x = 18
xMark1 = c.xAxis().addMark(18, 0x995500, "Backup Start")

# Set the mark line width to 2 pixels
xMark1.setLineWidth(2)

# Put the mark label at the left of the mark line
xMark1.setAlignment(ChartDirector::Left)

# Rotate the mark label by 90 degrees so it draws vertically
xMark1.setFontAngle(90)

# Add a vertical brown (0x995500) mark line at x = 20
xMark2 = c.xAxis().addMark(20, 0x995500, "Backup End")

# Set the mark line width to 2 pixels
xMark2.setLineWidth(2)

# Put the mark label at the right of the mark line
xMark2.setAlignment(ChartDirector::Right)

# Rotate the mark label by 90 degrees so it draws vertically
xMark2.setFontAngle(90)

# Add a green (0x00cc00) line layer with line width of 2 pixels
c.addLineLayer(data, 0x00cc00).setLineWidth(2)

# Output the chart
c.makeChart("markzone2.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
