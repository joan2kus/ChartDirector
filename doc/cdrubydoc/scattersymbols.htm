<HTML>
<HEAD>
<Title>Custom Scatter Symbols</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Custom Scatter Symbols</p>
<hr class="separator">
<div class="content">
<img src="images/scattersymbols.png">
<br><br>
This example demonstrates using external image files as scatter symbols.<br><br>
The chart in this example is created as 5 scatter layers using <a href="XYChart.addScatterLayer.htm">XYChart.addScatterLayer</a>, with each layer containing one point.<br><br>
The symbols for the scatter layers come from external image files. They are loaded using <a href="DataSet.setDataSymbol2.htm">DataSet.setDataSymbol2</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/scattersymbols_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class ScattersymbolsController &lt; ApplicationController

    def index()
        @title = "Custom Scatter Symbols"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The XY points for the scatter chart
        dataX = [200, 400, 300, 250, 500]
        dataY = [40, 100, 50, 150, 250]

        # The custom symbols for the points
        symbols = ["robot1.png", "robot2.png", "robot3.png", "robot4.png", "robot5.png"]

        # Create a XYChart object of size 450 x 400 pixels
        c = ChartDirector::XYChart.new(450, 400)

        # Set the plotarea at (55, 40) and of size 350 x 300 pixels, with a light grey
        # border (0xc0c0c0). Turn on both horizontal and vertical grid lines with light
        # grey color (0xc0c0c0)
        c.setPlotArea(55, 40, 350, 300, -1, -1, 0xc0c0c0, 0xc0c0c0, -1)

        # Add a title to the chart using 18 pts Times Bold Itatic font.
        c.addTitle("Battle Robots", "timesbi.ttf", 18)

        # Add a title to the y axis using 12 pts Arial Bold Italic font
        c.yAxis().setTitle("Speed (km/s)", "arialbi.ttf", 12)

        # Add a title to the y axis using 12 pts Arial Bold Italic font
        c.xAxis().setTitle("Range (km)", "arialbi.ttf", 12)

        # Set the axes line width to 3 pixels
        c.xAxis().setWidth(3)
        c.yAxis().setWidth(3)

        # Add each point of the data as a separate scatter layer, so that they can have a
        # different symbol
        0.upto(dataX.length - 1) do |i|
            c.addScatterLayer([dataX[i]], [dataY[i]]).getDataSet(0).setDataSymbol2(
                File.dirname(__FILE__) + "/" + symbols[i])
        end

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/scattersymbols.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The XY points for the scatter chart
dataX = [200, 400, 300, 250, 500]
dataY = [40, 100, 50, 150, 250]

# The custom symbols for the points
symbols = ["robot1.png", "robot2.png", "robot3.png", "robot4.png", "robot5.png"]

# Create a XYChart object of size 450 x 400 pixels
c = ChartDirector::XYChart.new(450, 400)

# Set the plotarea at (55, 40) and of size 350 x 300 pixels, with a light grey border
# (0xc0c0c0). Turn on both horizontal and vertical grid lines with light grey color
# (0xc0c0c0)
c.setPlotArea(55, 40, 350, 300, -1, -1, 0xc0c0c0, 0xc0c0c0, -1)

# Add a title to the chart using 18 pts Times Bold Itatic font.
c.addTitle("Battle Robots", "timesbi.ttf", 18)

# Add a title to the y axis using 12 pts Arial Bold Italic font
c.yAxis().setTitle("Speed (km/s)", "arialbi.ttf", 12)

# Add a title to the y axis using 12 pts Arial Bold Italic font
c.xAxis().setTitle("Range (km)", "arialbi.ttf", 12)

# Set the axes line width to 3 pixels
c.xAxis().setWidth(3)
c.yAxis().setWidth(3)

# Add each point of the data as a separate scatter layer, so that they can have a
# different symbol
0.upto(dataX.length - 1) do |i|
    c.addScatterLayer([dataX[i]], [dataY[i]]).getDataSet(0).setDataSymbol2(symbols[i]
        )
end

# Output the chart
c.makeChart("scattersymbols.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
