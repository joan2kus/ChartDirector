<HTML>
<HEAD>
<Title>Surface Chart (1)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Surface Chart (1)</p>
<hr class="separator">
<div class="content">
<img src="images/surface.jpg">
<br><br>
This example demonstrates the basic steps in creating surface charts.<br><br>
<ul><li> Create a <a href="SurfaceChart.htm">SurfaceChart</a> object using <a href="SurfaceChart.SurfaceChart.htm">SurfaceChart.SurfaceChart</a>.<br><br>
<li> Specify the position and size of the plot region using <a href="SurfaceChart.setPlotRegion.htm">SurfaceChart.setPlotRegion</a>.<br><br>
<li> Set data to the chart using <a href="SurfaceChart.setData.htm">SurfaceChart.setData</a>.<br><br>
<li> Interpolate the data using <a href="SurfaceChart.setInterpolation.htm">SurfaceChart.setInterpolation</a> for extra smoothness of the surface.<br><br>
<li> Set the position of the color axis (the color legend) using <a href="SurfaceChart.setColorAxis.htm">SurfaceChart.setColorAxis</a>.<br><br>
<li> Add chart and axis titles using <a href="BaseChart.addTitle.htm">BaseChart.addTitle</a> and <a href="Axis.setTitle.htm">Axis.setTitle</a>.<br><br>
<li> Generate the chart using <a href="BaseChart.makeChart2.htm">BaseChart.makeChart2</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/surface_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class SurfaceController &lt; ApplicationController

    def index()
        @title = "Surface Chart (1)"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The x and y coordinates of the grid
        dataX = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
            ]
        dataY = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
            ]

        # The values at the grid points. In this example, we will compute the values using
        # the formula z = x * sin(y) + y * sin(x).
        dataZ = Array.new((dataX.length) * (dataY.length))
        0.upto(dataY.length - 1) do |yIndex|
            y = dataY[yIndex]
            0.upto(dataX.length - 1) do |xIndex|
                x = dataX[xIndex]
                dataZ[yIndex * (dataX.length) + xIndex] = x * Math.sin(y) + y * Math.sin(x
                    )
            end
        end

        # Create a SurfaceChart object of size 720 x 600 pixels
        c = ChartDirector::SurfaceChart.new(720, 600)

        # Add a title to the chart using 20 points Times New Roman Italic font
        c.addTitle("Surface Energy Density   ", "timesi.ttf", 20)

        # Set the center of the plot region at (350, 280), and set width x depth x height
        # to 360 x 360 x 270 pixels
        c.setPlotRegion(350, 280, 360, 360, 270)

        # Set the data to use to plot the chart
        c.setData(dataX, dataY, dataZ)

        # Spline interpolate data to a 80 x 80 grid for a smooth surface
        c.setInterpolation(80, 80)

        # Add a color axis (the legend) in which the left center is anchored at (645,
        # 270). Set the length to 200 pixels and the labels on the right side.
        c.setColorAxis(645, 270, ChartDirector::Left, 200, ChartDirector::Right)

        # Set the x, y and z axis titles using 10 points Arial Bold font
        c.xAxis().setTitle("X (nm)", "arialbd.ttf", 10)
        c.yAxis().setTitle("Y (nm)", "arialbd.ttf", 10)
        c.zAxis().setTitle("Energy Density (J/m&lt;*font,super*&gt;2&lt;*/font*&gt;)", "arialbd.ttf",
            10)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::JPG), :type =&gt; "image/jpeg",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/surface.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The x and y coordinates of the grid
dataX = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
dataY = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# The values at the grid points. In this example, we will compute the values using
# the formula z = x * sin(y) + y * sin(x).
dataZ = Array.new((dataX.length) * (dataY.length))
0.upto(dataY.length - 1) do |yIndex|
    y = dataY[yIndex]
    0.upto(dataX.length - 1) do |xIndex|
        x = dataX[xIndex]
        dataZ[yIndex * (dataX.length) + xIndex] = x * Math.sin(y) + y * Math.sin(x)
    end
end

# Create a SurfaceChart object of size 720 x 600 pixels
c = ChartDirector::SurfaceChart.new(720, 600)

# Add a title to the chart using 20 points Times New Roman Italic font
c.addTitle("Surface Energy Density   ", "timesi.ttf", 20)

# Set the center of the plot region at (350, 280), and set width x depth x height to
# 360 x 360 x 270 pixels
c.setPlotRegion(350, 280, 360, 360, 270)

# Set the data to use to plot the chart
c.setData(dataX, dataY, dataZ)

# Spline interpolate data to a 80 x 80 grid for a smooth surface
c.setInterpolation(80, 80)

# Add a color axis (the legend) in which the left center is anchored at (645, 270).
# Set the length to 200 pixels and the labels on the right side.
c.setColorAxis(645, 270, ChartDirector::Left, 200, ChartDirector::Right)

# Set the x, y and z axis titles using 10 points Arial Bold font
c.xAxis().setTitle("X (nm)", "arialbd.ttf", 10)
c.yAxis().setTitle("Y (nm)", "arialbd.ttf", 10)
c.zAxis().setTitle("Energy Density (J/m&lt;*font,super*&gt;2&lt;*/font*&gt;)", "arialbd.ttf", 10)

# Output the chart
c.makeChart("surface.jpg")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
