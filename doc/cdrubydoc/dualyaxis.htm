<HTML>
<HEAD>
<Title>Dual Y-Axis</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Dual Y-Axis</p>
<hr class="separator">
<div class="content">
<img src="images/dualyaxis.png">
<br><br>
This example demonstrates a chart with two independent y-axis.<br><br>
ChartDirector supports arbitrary number of axes. The first two x and y axes are most commonly used and can be retrieved using <a href="XYChart.xAxis.htm">XYChart.xAxis</a>, <a href="XYChart.xAxis2.htm">XYChart.xAxis2</a>, <a href="XYChart.yAxis.htm">XYChart.yAxis</a> and <a href="XYChart.yAxis2.htm">XYChart.yAxis2</a>. These axes are by default put at the edges of the plot area.<br><br>
By default, a data set will bind to the primary y-axis. This can be modified by using <a href="DataSet.setUseYAxis.htm">DataSet.setUseYAxis</a> or <a href="DataSet.setUseYAxis2.htm">DataSet.setUseYAxis2</a>.<br><br>
The y-axes in this example are of different colors. This is achieved by using <a href="Axis.setColors.htm">Axis.setColors</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/dualyaxis_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class DualyaxisController &lt; ApplicationController

    def index()
        @title = "Dual Y-Axis"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the chart
        data0 = [0.05, 0.06, 0.48, 0.1, 0.01, 0.05]
        data1 = [100, 125, 265, 147, 67, 105]
        labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"]

        # Create a XYChart object of size 300 x 180 pixels
        c = ChartDirector::XYChart.new(300, 180)

        # Set the plot area at (50, 20) and of size 200 x 130 pixels
        c.setPlotArea(50, 20, 200, 130)

        # Add a title to the chart using 8 pts Arial Bold font
        c.addTitle("Independent Y-Axis Demo", "arialbd.ttf", 8)

        # Set the labels on the x axis.
        c.xAxis().setLabels(labels)

        # Add a title to the primary (left) y axis
        c.yAxis().setTitle("Packet Drop Rate (pps)")

        # Set the axis, label and title colors for the primary y axis to red (0xc00000) to
        # match the first data set
        c.yAxis().setColors(0xc00000, 0xc00000, 0xc00000)

        # Add a title to the secondary (right) y axis
        c.yAxis2().setTitle("Throughtput (MBytes)")

        # set the axis, label and title colors for the primary y axis to green (0x008000)
        # to match the second data set
        c.yAxis2().setColors(0x008000, 0x008000, 0x008000)

        # Add a line layer to for the first data set using red (0xc00000) color with a
        # line width to 3 pixels
        c.addLineLayer(data0, 0xc00000).setLineWidth(3)

        # Add a bar layer to for the second data set using green (0x00C000) color. Bind
        # the second data set to the secondary (right) y axis
        c.addBarLayer(data1, 0x00c000).setUseYAxis2()

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/dualyaxis.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the chart
data0 = [0.05, 0.06, 0.48, 0.1, 0.01, 0.05]
data1 = [100, 125, 265, 147, 67, 105]
labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"]

# Create a XYChart object of size 300 x 180 pixels
c = ChartDirector::XYChart.new(300, 180)

# Set the plot area at (50, 20) and of size 200 x 130 pixels
c.setPlotArea(50, 20, 200, 130)

# Add a title to the chart using 8 pts Arial Bold font
c.addTitle("Independent Y-Axis Demo", "arialbd.ttf", 8)

# Set the labels on the x axis.
c.xAxis().setLabels(labels)

# Add a title to the primary (left) y axis
c.yAxis().setTitle("Packet Drop Rate (pps)")

# Set the axis, label and title colors for the primary y axis to red (0xc00000) to
# match the first data set
c.yAxis().setColors(0xc00000, 0xc00000, 0xc00000)

# Add a title to the secondary (right) y axis
c.yAxis2().setTitle("Throughtput (MBytes)")

# set the axis, label and title colors for the primary y axis to green (0x008000) to
# match the second data set
c.yAxis2().setColors(0x008000, 0x008000, 0x008000)

# Add a line layer to for the first data set using red (0xc00000) color with a line
# width to 3 pixels
c.addLineLayer(data0, 0xc00000).setLineWidth(3)

# Add a bar layer to for the second data set using green (0x00C000) color. Bind the
# second data set to the secondary (right) y axis
c.addBarLayer(data1, 0x00c000).setUseYAxis2()

# Output the chart
c.makeChart("dualyaxis.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
