<HTML>
<HEAD>
<Title>Enhanced Area Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Enhanced Area Chart</p>
<hr class="separator">
<div class="content">
<img src="images/enhancedarea.jpg">
<br><br>
This example extends the <a href="simplearea.htm">Simple Area Chart</a> example by decorating the chart using a number of chart formatting features.<br><br>
<ul><li> The brushed silver background is achieved by using <a href="ChartDirector.brushedSilverColor.htm">ChartDirector.brushedSilverColor</a> to create the brushed silver color, then use it in <a href="XYChart.XYChart.htm">XYChart.XYChart</a> as the chart background color.<br><br>
<li> The rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>.<br><br>
<li> The soft drop shadow is configured using <a href="BaseChart.setDropShadow.htm">BaseChart.setDropShadow</a>.<br><br>
<li> Add a title to the chart using <a href="BaseChart.addTitle.htm">BaseChart.addTitle</a>. The title text is represented using <a href="cdml.htm">CDML</a> to include star icons in the text.<br><br>
<li> Add a transparent box using <a href="BaseChart.addText.htm">BaseChart.addText</a> and <a href="Box.setSize.htm">Box.setSize</a>, with a depressed 3D border configured with <a href="Box.setBackground.htm">Box.setBackground</a> and rounded corners configured with <a href="Box.setRoundedCorners.htm">Box.setRoundedCorners</a>. The box is for decorative purpose and acts as the border for the chart contents excluding the title.<br><br>
<li> Set the background, border and grid colors of the plot area using <a href="XYChart.setPlotArea.htm">XYChart.setPlotArea</a>.<br><br>
<li> Add titles to the axes using <a href="Axis.setTitle.htm">Axis.setTitle</a>.<br><br>
<li> Set the axis widths using <a href="Axis.setWidth.htm">Axis.setWidth</a>.<br><br>
<li> Use a semi-transparent gradient color as the area color. The gradient color is created using <a href="BaseChart.linearGradientColor.htm">BaseChart.linearGradientColor</a>.<br><br>
<li> Add a logo at the bottom right corner of the plot area as custom text using <a href="BaseChart.addText.htm">BaseChart.addText</a> with <a href="ChartDirector.BottomRight.htm">BottomRight</a> alignment. The logo includes images and text encoded using <a href="cdml.htm">CDML</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/enhancedarea_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class EnhancedareaController &lt; ApplicationController

    def index()
        @title = "Enhanced Area Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the area chart
        data = [30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60, 55, 53, 35,
            50, 66, 56, 48, 52, 65, 62]

        # The labels for the area chart
        labels = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
            "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"]

        # Create a XYChart object of size 600 x 360 pixels, with a brushed silver
        # background, 1 pixel 3D border effect, rounded corners and soft drop shadow.
        c = ChartDirector::XYChart.new(600, 360, ChartDirector::brushedSilverColor(),
            ChartDirector::Transparent, 1)
        c.setRoundedFrame()
        c.setDropShadow()

        # Set directory for loading images to current script directory
        c.setSearchPath(File.dirname(__FILE__))

        # Add a title box to the chart using 18 pts Times Bold Italic font.
        title = c.addTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Performance " \
            "Enhancer &lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "timesbi.ttf", 18)

        #
        # Use a text box with a depressed 3D border to create the inner depressed region
        #

        # The width of the frame border
        frameWidth = 5

        # Set the depressed region position
        contentBox = c.addText(frameWidth, title.getHeight(), "")
        contentBox.setSize(c.getDrawArea().getWidth() - 1 - frameWidth * 2, c.getDrawArea(
            ).getHeight() - title.getHeight() - frameWidth - 1)

        # Use -1 as the rasied effect to create a depressed region
        contentBox.setBackground(ChartDirector::Transparent, ChartDirector::Transparent,
            -1)

        # Set rounded corners, and put the text box at the back of the chart
        contentBox.setRoundedCorners(10)
        contentBox.setZOrder(ChartDirector::ChartBackZ)

        # Tentatively set the plotarea to 50 pixels from the left depressed edge, and 25
        # pixels under the top depressed edge. Set the width to 75 pixels less than the
        # depressed region width, and the height to 75 pixels less than the depressed
        # region height. Use white (ffffff) background, transparent border, and grey
        # (cccccc) horizontal and vertical grid lines.
        plotArea = c.setPlotArea(50 + contentBox.getLeftX(), contentBox.getTopY() + 25,
            contentBox.getWidth() - 75, contentBox.getHeight() - 75, 0xffffff, -1, -1,
            0xcccccc, -1)

        # Add a title to the y axis
        c.yAxis().setTitle("Energy Concentration (KJ per liter)")

        # Set the labels on the x axis.
        c.xAxis().setLabels(labels)

        # Display 1 out of 3 labels on the x-axis.
        c.xAxis().setLabelStep(3)

        # Add a title to the x axis using CDML
        c.xAxis().setTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;")

        # Set the axes width to 2 pixels
        c.xAxis().setWidth(2)
        c.yAxis().setWidth(2)

        # Add an area layer to the chart using a gradient color that changes vertically
        # from semi-transparent red (60ff0000) to semi-transparent white (60ffffff)
        c.addAreaLayer(data, c.linearGradientColor(0, contentBox.getTopY() + 20, 0,
            contentBox.getTopY() + contentBox.getHeight() - 50, 0x60ff0000, 0x60ffffff))

        # Adjust the plot area size, such that the bounding box (inclusive of axes) is 15
        # pixels from the left depressed edge, 25 pixels below the top depressed edge, 25
        # pixels from the right depressed edge, and 15 pixels above the bottom depressed
        # edge.
        c.packPlotArea(contentBox.getLeftX() + 15, contentBox.getTopY() + 25,
            contentBox.getLeftX() + contentBox.getWidth() - 25, contentBox.getTopY(
            ) + contentBox.getHeight() - 15)

        # Add a custom CDML text with the bottom right corner is anchored to the bootom
        # right corner of the plot area, with 5 pixels margin.
        c.addText(plotArea.getLeftX() + plotArea.getWidth() - 5, plotArea.getTopY(
            ) + plotArea.getHeight() - 5,
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;" \
            "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;"
            ).setAlignment(ChartDirector::BottomRight)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::JPG), :type =&gt; "image/jpeg",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/enhancedarea.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the area chart
data = [30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60, 55, 53, 35, 50,
    66, 56, 48, 52, 65, 62]

# The labels for the area chart
labels = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13",
    "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"]

# Create a XYChart object of size 600 x 360 pixels, with a brushed silver background,
# 1 pixel 3D border effect, rounded corners and soft drop shadow.
c = ChartDirector::XYChart.new(600, 360, ChartDirector::brushedSilverColor(),
    ChartDirector::Transparent, 1)
c.setRoundedFrame()
c.setDropShadow()

# Add a title box to the chart using 18 pts Times Bold Italic font.
title = c.addTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Performance " \
    "Enhancer &lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "timesbi.ttf", 18)

#
# Use a text box with a depressed 3D border to create the inner depressed region
#

# The width of the frame border
frameWidth = 5

# Set the depressed region position
contentBox = c.addText(frameWidth, title.getHeight(), "")
contentBox.setSize(c.getDrawArea().getWidth() - 1 - frameWidth * 2, c.getDrawArea(
    ).getHeight() - title.getHeight() - frameWidth - 1)

# Use -1 as the rasied effect to create a depressed region
contentBox.setBackground(ChartDirector::Transparent, ChartDirector::Transparent, -1)

# Set rounded corners, and put the text box at the back of the chart
contentBox.setRoundedCorners(10)
contentBox.setZOrder(ChartDirector::ChartBackZ)

# Tentatively set the plotarea to 50 pixels from the left depressed edge, and 25
# pixels under the top depressed edge. Set the width to 75 pixels less than the
# depressed region width, and the height to 75 pixels less than the depressed region
# height. Use white (ffffff) background, transparent border, and grey (cccccc)
# horizontal and vertical grid lines.
plotArea = c.setPlotArea(50 + contentBox.getLeftX(), contentBox.getTopY() + 25,
    contentBox.getWidth() - 75, contentBox.getHeight() - 75, 0xffffff, -1, -1,
    0xcccccc, -1)

# Add a title to the y axis
c.yAxis().setTitle("Energy Concentration (KJ per liter)")

# Set the labels on the x axis.
c.xAxis().setLabels(labels)

# Display 1 out of 3 labels on the x-axis.
c.xAxis().setLabelStep(3)

# Add a title to the x axis using CDML
c.xAxis().setTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;")

# Set the axes width to 2 pixels
c.xAxis().setWidth(2)
c.yAxis().setWidth(2)

# Add an area layer to the chart using a gradient color that changes vertically from
# semi-transparent red (60ff0000) to semi-transparent white (60ffffff)
c.addAreaLayer(data, c.linearGradientColor(0, contentBox.getTopY() + 20, 0,
    contentBox.getTopY() + contentBox.getHeight() - 50, 0x60ff0000, 0x60ffffff))

# Adjust the plot area size, such that the bounding box (inclusive of axes) is 15
# pixels from the left depressed edge, 25 pixels below the top depressed edge, 25
# pixels from the right depressed edge, and 15 pixels above the bottom depressed
# edge.
c.packPlotArea(contentBox.getLeftX() + 15, contentBox.getTopY() + 25,
    contentBox.getLeftX() + contentBox.getWidth() - 25, contentBox.getTopY(
    ) + contentBox.getHeight() - 15)

# Add a custom CDML text with the bottom right corner is anchored to the bootom right
# corner of the plot area, with 5 pixels margin.
c.addText(plotArea.getLeftX() + plotArea.getWidth() - 5, plotArea.getTopY(
    ) + plotArea.getHeight() - 5,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;" \
    "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;"
    ).setAlignment(ChartDirector::BottomRight)

# Output the chart
c.makeChart("enhancedarea.jpg")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
