<HTML>
<HEAD>
<Title>Depth Area Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Depth Area Chart</p>
<hr class="separator">
<div class="content">
<img src="images/deptharea.png">
<br><br>
This example demonstrates using multiple area layers with semi-transparent colors to create a depth area chart.<br><br>
ChartDirector allows an XYChart to containing multiple layers of the same or different types. In this example, all layers are 3D area layers. The areas are filled using semi-transparent colors to avoid the area on the front hiding the areas at the back.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/deptharea_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class DepthareaController &lt; ApplicationController

    def index()
        @title = "Depth Area Chart"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The data for the area chart
        data0 = [42, 49, 33, 38, 51, 46, 29, 41, 44, 57, 59, 52, 37, 34, 51, 56, 56, 60,
            70, 76, 63, 67, 75, 64, 51]
        data1 = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59,
            73, 77, 84, 82, 80, 84, 89]
        data2 = [87, 89, 85, 66, 53, 39, 24, 21, 37, 56, 37, 22, 21, 33, 13, 17, 4, 23,
            16, 25, 9, 10, 5, 7, 6]
        labels = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
            "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"]

        # Create a XYChart object of size 350 x 230 pixels
        c = ChartDirector::XYChart.new(350, 230)

        # Set the plotarea at (50, 30) and of size 250 x 150 pixels.
        c.setPlotArea(50, 30, 250, 150)

        # Add a legend box at (55, 0) (top of the chart) using 8 pts Arial Font. Set
        # background and border to Transparent.
        c.addLegend(55, 0, false, "", 8).setBackground(ChartDirector::Transparent)

        # Add a title to the x axis
        c.xAxis().setTitle("Network Load for Jun 12")

        # Add a title to the y axis
        c.yAxis().setTitle("MBytes")

        # Set the labels on the x axis.
        c.xAxis().setLabels(labels)

        # Display 1 out of 2 labels on the x-axis. Show minor ticks for remaining labels.
        c.xAxis().setLabelStep(2, 1)

        # Add three area layers, each representing one data set. The areas are drawn in
        # semi-transparent colors.
        c.addAreaLayer(data2, 0x808080ff, "Server #1", 3)
        c.addAreaLayer(data0, 0x80ff0000, "Server #2", 3)
        c.addAreaLayer(data1, 0x8000ff00, "Server #3", 3)

        # Output the chart
        send_data(c.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/deptharea.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The data for the area chart
data0 = [42, 49, 33, 38, 51, 46, 29, 41, 44, 57, 59, 52, 37, 34, 51, 56, 56, 60, 70,
    76, 63, 67, 75, 64, 51]
data1 = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59, 73,
    77, 84, 82, 80, 84, 89]
data2 = [87, 89, 85, 66, 53, 39, 24, 21, 37, 56, 37, 22, 21, 33, 13, 17, 4, 23, 16,
    25, 9, 10, 5, 7, 6]
labels = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13",
    "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"]

# Create a XYChart object of size 350 x 230 pixels
c = ChartDirector::XYChart.new(350, 230)

# Set the plotarea at (50, 30) and of size 250 x 150 pixels.
c.setPlotArea(50, 30, 250, 150)

# Add a legend box at (55, 0) (top of the chart) using 8 pts Arial Font. Set
# background and border to Transparent.
c.addLegend(55, 0, false, "", 8).setBackground(ChartDirector::Transparent)

# Add a title to the x axis
c.xAxis().setTitle("Network Load for Jun 12")

# Add a title to the y axis
c.yAxis().setTitle("MBytes")

# Set the labels on the x axis.
c.xAxis().setLabels(labels)

# Display 1 out of 2 labels on the x-axis. Show minor ticks for remaining labels.
c.xAxis().setLabelStep(2, 1)

# Add three area layers, each representing one data set. The areas are drawn in
# semi-transparent colors.
c.addAreaLayer(data2, 0x808080ff, "Server #1", 3)
c.addAreaLayer(data0, 0x80ff0000, "Server #2", 3)
c.addAreaLayer(data1, 0x8000ff00, "Server #3", 3)

# Output the chart
c.makeChart("deptharea.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
