<HTML>
<HEAD>
<Title>Icon Angular Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Ruby Edition)</p>
<p class="heading1">Icon Angular Meter</p>
<hr class="separator">
<div class="content">
<img src="images/iconameter.png">
<br><br>
This example demonstrates a fuel-tank like meters, in which the meter is labelled by an icon and the scale shows text abbreviations.<br><br>
The scale labels on the meter is created by using <a href="BaseMeter.setScale2.htm">BaseMeter.setScale2</a>. The icon is created by adding a custom text box with <a href="BaseChart.addText.htm">BaseChart.addText</a> and using <a href="cdml.htm">CDML</a> to specify an icon.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Ruby On Rails Version - Controller]</b> app/controllers/iconameter_controller.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>require("chartdirector")

class IconameterController &lt; ApplicationController

    def index()
        @title = "Icon Angular Meter"
        @ctrl_file = File.expand_path(__FILE__)
        @noOfCharts = 1
        render :template =&gt; "templates/chartview"
    end

    #
    # Render and deliver the chart
    #
    def getchart()
        # The value to display on the meter
        value = 85

        # Create an AugularMeter object of size 70 x 90 pixels, using black background
        # with a 2 pixel 3D depressed border.
        m = ChartDirector::AngularMeter.new(70, 90, 0, 0, -2)

        # Set directory for loading images to current script directory
        m.setSearchPath(File.dirname(__FILE__))

        # Use white on black color palette for default text and line colors
        m.setColors(ChartDirector::whiteOnBlackPalette)

        # Set the meter center at (10, 45), with radius 50 pixels, and span from 135 to 45
        # degress
        m.setMeter(10, 45, 50, 135, 45)

        # Set meter scale from 0 - 100, with the specified labels
        m.setScale2(0, 100, ["E", " ", " ", " ", "F"])

        # Set the angular arc and major tick width to 2 pixels
        m.setLineWidth(2, 2)

        # Add a red zone at 0 - 15
        m.addZone(0, 15, 0xff3333)

        # Add an icon at (25, 35)
        m.addText(25, 35, "&lt;*img=gas.gif*&gt;")

        # Add a yellow (ffff00) pointer at the specified value
        m.addPointer(value, 0xffff00)

        # Output the chart
        send_data(m.makeChart2(ChartDirector::PNG), :type =&gt; "image/png",
            :disposition =&gt; "inline")
    end

end</pre></tr></td></table><br><b>[Ruby On Rails Version - View]</b> app/views/templates/chartview.rhtml
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;

&lt;!-- Title --&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    &lt;%= @title %&gt;
&lt;/div&gt;
&lt;hr style="border:solid 1px #000080" /&gt;

&lt;!-- Source Code Listing Link --&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;%= link_to "Source Code Listing", 
        :controller =&gt; "cddemo", :action =&gt; "viewsource",
        :ctrl_file =&gt; @ctrl_file, :view_file =&gt; File.expand_path(__FILE__) %&gt;
&lt;/div&gt;

&lt;!-- Create one or more IMG tags to display the demo chart(s) --&gt;
&lt;% 0.upto(@noOfCharts - 1) do |i| %&gt;
    &lt;img src="&lt;%= url_for(:action =&gt; "getchart", :img =&gt; i) %&gt;"&gt;
&lt;% end %&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Command Line Version]</b> rubydemo/iconameter.rb
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/env ruby
require("chartdirector")

# The value to display on the meter
value = 85

# Create an AugularMeter object of size 70 x 90 pixels, using black background with a
# 2 pixel 3D depressed border.
m = ChartDirector::AngularMeter.new(70, 90, 0, 0, -2)

# Use white on black color palette for default text and line colors
m.setColors(ChartDirector::whiteOnBlackPalette)

# Set the meter center at (10, 45), with radius 50 pixels, and span from 135 to 45
# degress
m.setMeter(10, 45, 50, 135, 45)

# Set meter scale from 0 - 100, with the specified labels
m.setScale2(0, 100, ["E", " ", " ", " ", "F"])

# Set the angular arc and major tick width to 2 pixels
m.setLineWidth(2, 2)

# Add a red zone at 0 - 15
m.addZone(0, 15, 0xff3333)

# Add an icon at (25, 35)
m.addText(25, 35, "&lt;*img=gas.gif*&gt;")

# Add a yellow (ffff00) pointer at the specified value
m.addPointer(value, 0xffff00)

# Output the chart
m.makeChart("iconameter.png")</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
